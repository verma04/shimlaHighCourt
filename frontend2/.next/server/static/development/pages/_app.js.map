{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./config.js","webpack:///./lib/withApollo.js","webpack:///./pages/_app.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-link-ws\"","webpack:///external \"apollo-utilities\"","webpack:///external \"next-with-apollo\"","webpack:///external \"next/app\"","webpack:///external \"react\"","webpack:///external \"react-apollo\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const env = process.env.NODE_ENV || \"development\";\nconst config = {\n  development: {\n    clientEndpoint: \"http://localhost/graphql\",\n    serverEndpoint: \"http://nginx/graphql\",\n    wsEndpoint: \"ws://localhost/graphql\"\n  },\n  production: {\n    clientEndpoint: \"http://192.168.55.141/graphql\",\n    serverEndpoint: \"http://192.168.55.141/graphql\",\n    wsEndpoint: \"ws://192.168.55.141/graphql\"\n  }\n}[env];\n\nexport default config;\n","import withApollo from \"next-with-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloLink, split } from \"apollo-link\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { getMainDefinition } from \"apollo-utilities\";\nimport config from \"../config\";\n\nconst endpoint = process.browser\n  ? config.clientEndpoint\n  : config.serverEndpoint;\n\nfunction createClient({ headers }) {\n  const cache = new InMemoryCache();\n  const authLink = new ApolloLink((operation, forward) => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: \"include\"\n      },\n      headers\n    });\n    return forward(operation);\n  });\n\n  const httpLink = createHttpLink({\n    uri: \"http://localhost/graphql\"\n  });\n\n  const wsLink = process.browser\n    ? new WebSocketLink({\n        uri: config.wsEndpoint,\n        options: {\n          reconnect: true,\n          connectionParams: () => {\n            const token = localStorage.getItem(\"token\");\n            if (token) {\n              return { authToken: token };\n            }\n            return {};\n          }\n        }\n      })\n    : () => {\n        console.log(\"SSR\");\n      };\n\n  const link = split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return (\n        kind === \"OperationDefinition\" &&\n        operation === \"subscription\" &&\n        process.browser\n      );\n    },\n    wsLink,\n    httpLink\n  );\n\n  return new ApolloClient({\n    cache,\n    link: authLink.concat(link)\n  });\n}\n\nexport default withApollo(createClient);\n\n// const endpoint = process.browser\n//   ? config.clientEndpoint\n//   : config.serverEndpoint;\n\n// function createClient() {\n//   const cache = new InMemoryCache();\n//   const httpLink = new HttpLink({\n//     uri: endpoint,\n//     credentials: \"same-origin\"\n//   });\n//   const wsLink = process.browser\n//     ? new WebSocketLink({\n//         uri: \"ws://localhost/graphql\",\n//         options: {\n//           reconnect: true\n//         }\n//       })\n//     : () => {\n//         console.log(\"SSR\");\n//       };\n//   const link = split(\n//     ({ query }) => {\n//       const { kind, operation } = getMainDefinition(query);\n//       return (\n//         kind === \"OperationDefinition\" &&\n//         operation === \"subscription\" &&\n//         process.browser\n//       );\n//     },\n//     wsLink,\n//     httpLink\n//   );\n\n//   return new ApolloClient({\n//     link,\n//     cache\n//   });\n// }\n","import App, { Container } from \"next/app\";\nimport { ApolloProvider } from \"react-apollo\";\nimport withApollo from \"../lib/withApollo\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n  render() {\n    const { Component, pageProps, apollo } = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apollo}>\n          <Component {...pageProps} />\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withApollo(MyApp);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"apollo-link-ws\");","module.exports = require(\"apollo-utilities\");","module.exports = require(\"next-with-apollo\");","module.exports = require(\"next/app\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAaA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AAEA;AACA;AADA;AAIA,iCACA;AAcA;AACA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAKA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAlBA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AATA;AACA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;AC1BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}