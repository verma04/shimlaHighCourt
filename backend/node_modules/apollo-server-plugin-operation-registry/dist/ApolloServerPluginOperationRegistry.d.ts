import { ApolloServerPlugin, GraphQLRequestContext } from 'apollo-server-plugin-base';
import { fetch } from 'apollo-server-env';
declare type ForbidUnregisteredOperationsPredicate = (requestContext: GraphQLRequestContext) => boolean;
export interface OperationRegistryRequestContext {
    signature: string;
    normalizedDocument: string;
}
export interface Operation {
    signature: string;
    document: string;
}
export interface OperationManifest {
    version: number;
    operations: Array<Operation>;
}
export interface Options {
    debug?: boolean;
    fetcher?: typeof fetch;
    forbidUnregisteredOperations?: boolean | ForbidUnregisteredOperationsPredicate;
    dryRun?: boolean;
    onUnregisteredOperation?: (requestContext: GraphQLRequestContext, operationRegistryRequestContext: OperationRegistryRequestContext) => void;
    onForbiddenOperation?: (requestContext: GraphQLRequestContext, operationRegistryRequestContext: OperationRegistryRequestContext) => void;
}
export default function plugin(options?: Options): () => ApolloServerPlugin;
export {};
//# sourceMappingURL=ApolloServerPluginOperationRegistry.d.ts.map